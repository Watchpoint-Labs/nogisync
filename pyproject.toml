[project]
name = "nogisync"
description = "Sync GitHub markdown files to Notion"
authors = [{ name = "Watchpoint Labs", email = "hello@watchpointlabs.com" }]
requires-python = "~=3.12.0"
version = "1.0.0"
dependencies = [
    "notion-client",
    "frontmatter",
    "click"
]

[project.scripts]
nogisync = "nogisync.cli:main"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [".direnv", ".git", ".ruff_cache", "node_modules"]

line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
fixable = ["ALL"]
# Selected lint rules:
# - defaults (`E4`, E7`, `E9`, and `F`)
# - enable isort (`I`)
# - logging (LOG)
# - logging-format (G)
# - flake8-tidy-imports (TID)
select = ["E4", "E7", "E9", "F", "I", "LOG", "G", "TID"]
unfixable = []

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.setuptools]
py-modules = []

[tool.pytest.ini_options]
python_files = ["test_*.py", "tests.py"]
addopts = "-ra --cov=. --no-cov-on-fail --cov-report=html --cov-report=term"


[tool.uv]
python-preference = "managed"
default-groups = ["dev"]
package=true

[tool.uv.pip]
python = "3.12"
system = false
verify-hashes = true
no-emit-package = ["setuptools"]
no-strip-extras = true

[tool.coverage.run]
parallel = true
branch = true
plugins = []
omit = [
  ".venv/*",
]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  # a more strict default pragma
  "\\# pragma: no cover\\b",

  # allow defensive code
  "^\\s*raise AssertionError\\b",
  "^\\s*raise NotImplementedError\\b",
  "^\\s*raise$",
  "^\\s*return NotImplemented\\b",

  # typing-related code
  "-> ['\"]?NoReturn['\"]?:",
  ": \\.\\.\\.(\\s*#.*)?$",
  "^ +\\.\\.\\.$",
  "^if (False|TYPE_CHECKING):",
]

[dependency-groups]
dev = [
  "coverage[toml]>=7.6.8",
  "debugpy>=1.8.9",
  "ipdb>=0.13.13",
  "ipython>=8.30.0",
  "mypy>=1.14.1",
  "pip-tools>=7.4.1",
  "pre-commit>=4.0.1",
  "pudb>=2024.1.3",
  "pytest-cov>=6.0.0",
  "ruff>=0.8.1",
]

[tool.mypy]
follow_untyped_imports = true

